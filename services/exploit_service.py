from attacks.exploit_tester import ExploitTester
from utils.logger import Logger

class ExploitService:
    def __init__(self, logger=None, html_logger=None):
        self.logger = logger or Logger(log_file="logs/scan.log")
        self.tester = ExploitTester(logger=self.logger)
        self.html_logger = html_logger

    def test(self, vuln_list, ssid):
        """
        vuln_list: list of { ip, os_version, vulnerabilities }
        Returns list of targets: { ip, os_version }
        """
        targets = []
        for entry in vuln_list:
            ip = entry["ip"]
            for vuln in entry["vulnerabilities"]:
                self.logger.log(f"[INFO] Testing exploit on {ip}: {vuln.get('name')}")
                self.tester.run_exploit_testing(
                    service_data=vuln,
                    target_ip=ip,
                    ssid=ssid,
                    html_logger=self.html_logger
                )
            targets.append({"ip": ip, "os_version": entry["os_version"]})
        self.logger.log(f"[INFO] Exploit testing complete for {len(targets)} host(s).")
        return targets
